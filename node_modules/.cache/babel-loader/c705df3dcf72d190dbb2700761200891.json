{"ast":null,"code":"var _jsxFileName = \"/Users/oddfl3x/Code/bridge2/NATI<>bridge_API_SWAP/src/components/NATIForm/TransactionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LoadingButton } from '@mui/lab';\nimport { Alert, Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { Box } from '@mui/system';\nimport { useWeb3React } from '@web3-react/core';\nimport { useForm } from 'react-hook-form';\nimport web3 from 'web3';\nimport ERC20_ABI from 'abis/ERC20Abi.json';\nimport NATI_ABI from 'abis/NatiAbi.json';\nimport { GLOBAL_ADDRESS, ETHEREUM_BLOCKCHAIN_NAME, DELEGATOR_ADD } from 'constants/contractAddress';\nimport useContract from 'hooks/useContract';\nimport { getContract } from 'utils/contract';\nimport { convertVerusAddressToEthAddress } from \"utils/convert\";\nimport { validateAddress, NFTAddressType, isiAddress, isRAddress } from 'utils/rules';\nimport AddressField from './AddressField';\nimport AmountField from './AmountField';\nimport DestinationField from './DestinationField';\nimport { useToast } from '../Toast/ToastProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst maxGasApprove = 60000;\nconst maxGasSwap = 3000000;\nexport default function TransactionForm() {\n  _s();\n  const [isTxPending, setIsTxPending] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const {\n    addToast\n  } = useToast();\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const natiContract = useContract(GLOBAL_ADDRESS.NATI, NATI_ABI);\n  const {\n    handleSubmit,\n    control,\n    watch\n  } = useForm({\n    mode: 'all'\n  });\n  const destination = watch('Swap to');\n  const address = watch('address');\n  const authoriseOneTokenAmount = async amount => {\n    setAlert(`Metamask will now pop up to allow the spend ${amount}(NATI) from your ${ETHEREUM_BLOCKCHAIN_NAME} balance.`);\n    const tokenERC = GLOBAL_ADDRESS.NATI;\n    const tokenInstContract = getContract(tokenERC, ERC20_ABI, library, account);\n    const decimals = web3.utils.toBN(await tokenInstContract.decimals());\n    const ten = new web3.utils.BN(10);\n    const base = ten.pow(new web3.utils.BN(decimals));\n    const comps = amount.split('.');\n    if (comps.length > 2) {\n      throw new Error('Too many decimal points');\n    }\n    let whole = comps[0];\n    let fraction = comps[1];\n    if (!whole) {\n      whole = '0';\n    }\n    if (!fraction) {\n      fraction = '0';\n    }\n    if (fraction.length > decimals) {\n      throw new Error('Too many decimal places');\n    }\n    while (fraction.length < decimals) {\n      fraction += '0';\n    }\n    whole = new web3.utils.BN(whole);\n    fraction = new web3.utils.BN(fraction);\n    const bigAmount = whole.mul(base).add(fraction);\n    const approve = await tokenInstContract.approve(GLOBAL_ADDRESS.VNATI, bigAmount.toString(), {\n      from: account,\n      gasLimit: maxGasApprove\n    });\n    setAlert(`Authorising ERC20 Token, please wait...`);\n    const reply = await approve.wait();\n    if (reply.status === 0) {\n      throw new Error(\"Authorising ERC20 Token Spend Failed, please check your balance.\");\n    }\n    setAlert(`\n      Your ${ETHEREUM_BLOCKCHAIN_NAME} account has authorised the bridge to spend your NATI token, the amount: ${amount}. \n      \\n Next, after this window please check the amount in Metamask is what you wish to send.`);\n  };\n  const onSubmit = async values => {\n    const {\n      amount,\n      destination\n    } = values;\n    setAlert(null);\n    setIsTxPending(true);\n    const validAccount = await validateAddress(account);\n    if (validAccount !== true) {\n      addToast({\n        type: \"error\",\n        description: 'Sending Account invalid'\n      });\n      setAlert(null);\n      setIsTxPending(false);\n      return;\n    }\n    let destinationaddress = '';\n    if (isiAddress(address)) {\n      destinationaddress = convertVerusAddressToEthAddress(address);\n    } else if (isRAddress(address)) {\n      destinationaddress = convertVerusAddressToEthAddress(address);\n    } else {\n      addToast({\n        type: \"error\",\n        description: 'Send to address invalid'\n      });\n      setAlert(null);\n      setIsTxPending(false);\n      return;\n    }\n    try {\n      await authoriseOneTokenAmount(amount);\n      const addressType = NFTAddressType(address);\n      // params = (uint256 _amountToSwap, address addressTo, uint8 addressType, address bridgeAddress, address destinationCurrency, address feecurrencyid)\n      const txResult = await natiContract.swapToBridge(web3.utils.toWei(0.003, 'ether'), destinationaddress, addressType, DELEGATOR_ADD, \"0xffEce948b8A38bBcC813411D2597f7f8485a0689\", \"0x67460C2f56774eD27EeB8685f29f6CEC0B090B00\", {\n        from: account,\n        gasLimit: maxGasSwap\n      });\n      await txResult.wait();\n      addToast({\n        type: \"success\",\n        description: 'Transaction Success!'\n      });\n      setAlert(null);\n      setIsTxPending(false);\n    } catch (error) {\n      if (error.message) {\n        addToast({\n          type: \"error\",\n          description: error.message\n        });\n      } else {\n        addToast({\n          type: \"error\",\n          description: 'Transaction Failed!'\n        });\n      }\n      setAlert(null);\n      setIsTxPending(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [alert && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), !account && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Wallet not connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(AddressField, {\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(DestinationField, {\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(AmountField, {\n          control: control,\n          destination: destination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"30px\",\n        textAlign: \"center\",\n        width: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n          loading: isTxPending,\n          disabled: isTxPending,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TransactionForm, \"bJZACMBCx+QrrfwoYoaHiZaYFPA=\", false, function () {\n  return [useToast, useWeb3React, useContract, useForm];\n});\n_c = TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","LoadingButton","Alert","Typography","Grid","Box","useWeb3React","useForm","web3","ERC20_ABI","NATI_ABI","GLOBAL_ADDRESS","ETHEREUM_BLOCKCHAIN_NAME","DELEGATOR_ADD","useContract","getContract","convertVerusAddressToEthAddress","validateAddress","NFTAddressType","isiAddress","isRAddress","AddressField","AmountField","DestinationField","useToast","jsxDEV","_jsxDEV","Fragment","_Fragment","maxGasApprove","maxGasSwap","TransactionForm","_s","isTxPending","setIsTxPending","alert","setAlert","addToast","account","library","natiContract","NATI","handleSubmit","control","watch","mode","destination","address","authoriseOneTokenAmount","amount","tokenERC","tokenInstContract","decimals","utils","toBN","ten","BN","base","pow","comps","split","length","Error","whole","fraction","bigAmount","mul","add","approve","VNATI","toString","from","gasLimit","reply","wait","status","onSubmit","values","validAccount","type","description","destinationaddress","addressType","txResult","swapToBridge","toWei","error","message","children","severity","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","mt","textAlign","width","loading","disabled","color","variant","_c","$RefreshReg$"],"sources":["/Users/oddfl3x/Code/bridge2/NATI<>bridge_API_SWAP/src/components/NATIForm/TransactionForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Alert, Typography } from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Box } from '@mui/system';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport web3 from 'web3';\r\n\r\nimport ERC20_ABI from 'abis/ERC20Abi.json';\r\nimport NATI_ABI from 'abis/NatiAbi.json';\r\nimport {\r\n  GLOBAL_ADDRESS,\r\n  ETHEREUM_BLOCKCHAIN_NAME,\r\n  DELEGATOR_ADD\r\n} from 'constants/contractAddress';\r\nimport useContract from 'hooks/useContract';\r\nimport { getContract } from 'utils/contract';\r\nimport { convertVerusAddressToEthAddress } from \"utils/convert\";\r\nimport { validateAddress, NFTAddressType, isiAddress, isRAddress } from 'utils/rules'\r\n\r\nimport AddressField from './AddressField';\r\nimport AmountField from './AmountField';\r\nimport DestinationField from './DestinationField';\r\nimport { useToast } from '../Toast/ToastProvider';\r\n\r\n\r\nconst maxGasApprove = 60000;\r\nconst maxGasSwap = 3000000;\r\n\r\nexport default function TransactionForm() {\r\n\r\n  const [isTxPending, setIsTxPending] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n  const { addToast } = useToast();\r\n  const { account, library } = useWeb3React();\r\n  const natiContract = useContract(GLOBAL_ADDRESS.NATI, NATI_ABI);\r\n\r\n  const { handleSubmit, control, watch } = useForm({\r\n    mode: 'all'\r\n  });\r\n\r\n  const destination = watch('Swap to');\r\n  const address = watch('address');\r\n  const authoriseOneTokenAmount = async (amount) => {\r\n    setAlert(`Metamask will now pop up to allow the spend ${amount}(NATI) from your ${ETHEREUM_BLOCKCHAIN_NAME} balance.`);\r\n\r\n    const tokenERC = GLOBAL_ADDRESS.NATI;\r\n    const tokenInstContract = getContract(tokenERC, ERC20_ABI, library, account)\r\n    const decimals = web3.utils.toBN(await tokenInstContract.decimals());\r\n\r\n    const ten = new web3.utils.BN(10);\r\n    const base = ten.pow(new web3.utils.BN(decimals));\r\n    const comps = amount.split('.');\r\n    if (comps.length > 2) { throw new Error('Too many decimal points'); }\r\n\r\n    let whole = comps[0];\r\n    let fraction = comps[1];\r\n\r\n    if (!whole) { whole = '0'; }\r\n    if (!fraction) { fraction = '0'; }\r\n    if (fraction.length > decimals) {\r\n      throw new Error('Too many decimal places');\r\n    }\r\n\r\n    while (fraction.length < decimals) {\r\n      fraction += '0';\r\n    }\r\n\r\n    whole = new web3.utils.BN(whole);\r\n    fraction = new web3.utils.BN(fraction);\r\n    const bigAmount = (whole.mul(base)).add(fraction);\r\n\r\n    const approve = await tokenInstContract.approve(GLOBAL_ADDRESS.VNATI, bigAmount.toString(), { from: account, gasLimit: maxGasApprove })\r\n\r\n    setAlert(`Authorising ERC20 Token, please wait...`);\r\n    const reply = await approve.wait();\r\n\r\n    if (reply.status === 0) {\r\n      throw new Error(\"Authorising ERC20 Token Spend Failed, please check your balance.\")\r\n    }\r\n    setAlert(`\r\n      Your ${ETHEREUM_BLOCKCHAIN_NAME} account has authorised the bridge to spend your NATI token, the amount: ${amount}. \r\n      \\n Next, after this window please check the amount in Metamask is what you wish to send.`\r\n    );\r\n  }\r\n\r\n  const onSubmit = async (values) => {\r\n    const { amount, destination } = values;\r\n    setAlert(null);\r\n    setIsTxPending(true);\r\n    const validAccount = await validateAddress(account);\r\n    if (validAccount !== true) {\r\n      addToast({ type: \"error\", description: 'Sending Account invalid' })\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n      return;\r\n    }\r\n\r\n    let destinationaddress = '';\r\n    if (isiAddress(address)) {\r\n      destinationaddress = convertVerusAddressToEthAddress(address)\r\n    } else if (isRAddress(address)) {\r\n      destinationaddress = convertVerusAddressToEthAddress(address)\r\n    } else {\r\n      addToast({ type: \"error\", description: 'Send to address invalid' })\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n      return;\r\n    }\r\n   \r\n    try {\r\n      await authoriseOneTokenAmount(amount);\r\n      const addressType = NFTAddressType(address);\r\n      // params = (uint256 _amountToSwap, address addressTo, uint8 addressType, address bridgeAddress, address destinationCurrency, address feecurrencyid)\r\n      const txResult = await natiContract.swapToBridge(\r\n        web3.utils.toWei(0.003, 'ether'), \r\n        destinationaddress, \r\n        addressType, \r\n        DELEGATOR_ADD, \r\n        \"0xffEce948b8A38bBcC813411D2597f7f8485a0689\", \r\n        \"0x67460C2f56774eD27EeB8685f29f6CEC0B090B00\",\r\n        { from: account, gasLimit: maxGasSwap });\r\n\r\n      await txResult.wait();\r\n\r\n      addToast({ type: \"success\", description: 'Transaction Success!' });\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n\r\n    } catch (error) {\r\n      if (error.message) {\r\n        addToast({ type: \"error\", description: error.message })\r\n      } else {\r\n        addToast({ type: \"error\", description: 'Transaction Failed!' })\r\n      }\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {alert &&\r\n          <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n            <Typography>\r\n              {alert}\r\n            </Typography>\r\n          </Alert>\r\n        }\r\n        {!account && <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n          <Typography>\r\n            <b>Wallet not connected</b>\r\n          </Typography>\r\n        </Alert>\r\n        }\r\n        <Grid item xs={12}>\r\n          <AddressField\r\n            control={control}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <DestinationField\r\n            control={control}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AmountField\r\n            control={control}\r\n            destination={destination}\r\n\r\n          />\r\n        </Grid>\r\n        <Box mt=\"30px\" textAlign=\"center\" width=\"100%\">\r\n          <LoadingButton loading={isTxPending} disabled={isTxPending} type=\"submit\" color=\"primary\" variant=\"contained\">Send</LoadingButton>\r\n        </Box>\r\n\r\n      </form >\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}