{"ast":null,"code":"var _jsxFileName = \"/Users/oddfl3x/Code/bridge/natiBridgeWebsite - Copy/src/components/ConnectButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Button } from '@mui/material';\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError } from '@web3-react/injected-connector';\nimport { useToast } from './Toast/ToastProvider';\nimport { ID_NAME_MAPPING } from '../constants/chain';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectButton = ({\n  onClick\n}) => {\n  _s();\n  const {\n    account,\n    chainId,\n    error\n  } = useWeb3React();\n  const {\n    addToast\n  } = useToast();\n  useEffect(() => {\n    if (error instanceof NoEthereumProviderError) {\n      addToast({\n        type: 'error',\n        description: 'Ethereum was not provided.'\n      });\n    } else if (error instanceof UserRejectedRequestError) {\n      addToast({\n        type: 'error',\n        description: 'User rejected the connection'\n      });\n    } else if (error instanceof UnsupportedChainIdError) {\n      addToast({\n        type: 'error',\n        description: 'Metamask is not supporting the chain you are using. Please change your network on your Metamask.'\n      });\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"outlined\",\n    onClick: onClick,\n    children: account ? `${account.substr(0, 6)}...${account.substr(account.length - 4)} (${ID_NAME_MAPPING[chainId].title})` : 'Connect Wallet'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectButton, \"ewiGzrmdBQLBqHedATEV0nHLBuM=\", false, function () {\n  return [useWeb3React, useToast];\n});\n_c = ConnectButton;\nexport default ConnectButton;\nvar _c;\n$RefreshReg$(_c, \"ConnectButton\");","map":{"version":3,"names":["React","useEffect","Button","UnsupportedChainIdError","useWeb3React","NoEthereumProviderError","UserRejectedRequestError","useToast","ID_NAME_MAPPING","jsxDEV","_jsxDEV","ConnectButton","onClick","_s","account","chainId","error","addToast","type","description","variant","children","substr","length","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oddfl3x/Code/bridge/natiBridgeWebsite - Copy/src/components/ConnectButton.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nimport { Button } from '@mui/material';\r\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\r\nimport { NoEthereumProviderError, UserRejectedRequestError } from '@web3-react/injected-connector';\r\n\r\nimport { useToast } from './Toast/ToastProvider';\r\nimport { ID_NAME_MAPPING } from '../constants/chain';\r\n\r\nconst ConnectButton = ({ onClick }) => {\r\n  const { account, chainId, error } = useWeb3React();\r\n  const { addToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    if (error instanceof NoEthereumProviderError) {\r\n      addToast({ type: 'error', description: 'Ethereum was not provided.' })\r\n    } else if (error instanceof UserRejectedRequestError) {\r\n      addToast({ type: 'error', description: 'User rejected the connection' })\r\n    } else if (error instanceof UnsupportedChainIdError) {\r\n      addToast({ type: 'error', description: 'Metamask is not supporting the chain you are using. Please change your network on your Metamask.' })\r\n    }\r\n  }, [error])\r\n\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      onClick={onClick}\r\n    >\r\n      {account ? `${account.substr(0, 6)}...${account.substr(account.length - 4)} (${ID_NAME_MAPPING[chainId].title})` : 'Connect Wallet'}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ConnectButton\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,uBAAuB,EAAEC,YAAY,QAAQ,kBAAkB;AACxE,SAASC,uBAAuB,EAAEC,wBAAwB,QAAQ,gCAAgC;AAElG,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGZ,YAAY,CAAC,CAAC;EAClD,MAAM;IAAEa;EAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAE/BN,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,YAAYX,uBAAuB,EAAE;MAC5CY,QAAQ,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,WAAW,EAAE;MAA6B,CAAC,CAAC;IACxE,CAAC,MAAM,IAAIH,KAAK,YAAYV,wBAAwB,EAAE;MACpDW,QAAQ,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,WAAW,EAAE;MAA+B,CAAC,CAAC;IAC1E,CAAC,MAAM,IAAIH,KAAK,YAAYb,uBAAuB,EAAE;MACnDc,QAAQ,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,WAAW,EAAE;MAAmG,CAAC,CAAC;IAC9I;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEN,OAAA,CAACR,MAAM;IACLkB,OAAO,EAAC,UAAU;IAClBR,OAAO,EAAEA,OAAQ;IAAAS,QAAA,EAEhBP,OAAO,GAAG,GAAGA,OAAO,CAACQ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMR,OAAO,CAACQ,MAAM,CAACR,OAAO,CAACS,MAAM,GAAG,CAAC,CAAC,KAAKf,eAAe,CAACO,OAAO,CAAC,CAACS,KAAK,GAAG,GAAG;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7H,CAAC;AAEb,CAAC;AAAAf,EAAA,CAtBKF,aAAa;EAAA,QACmBP,YAAY,EAC3BG,QAAQ;AAAA;AAAAsB,EAAA,GAFzBlB,aAAa;AAwBnB,eAAeA,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}