{"ast":null,"code":"var _jsxFileName = \"/Users/oddfl3x/Code/bridge2/NATI<>bridge_API_SWAP/src/components/NATIForm/TransactionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LoadingButton } from '@mui/lab';\nimport { Alert, Typography, Grid, Box } from '@mui/material';\nimport { useWeb3React } from '@web3-react/core';\nimport { useForm } from 'react-hook-form';\nimport web3 from 'web3';\nimport ERC20_ABI from 'abis/ERC20Abi.json';\nimport NATI_ABI from 'abis/NatiAbi.json';\nimport { GLOBAL_ADDRESS, ETHEREUM_BLOCKCHAIN_NAME } from 'constants/contractAddress';\nimport useContract from 'hooks/useContract';\nimport { getContract } from 'utils/contract';\nimport { validateAddress, NFTAddressType } from 'utils/rules';\nimport AddressField from './AddressField';\nimport AmountField from './AmountField';\nimport DestinationField from './DestinationField';\nimport { useToast } from '../Toast/ToastProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst maxGasApprove = 60000;\nconst maxGasSwap = 1000000;\nexport default function TransactionForm() {\n  _s();\n  const [isTxPending, setIsTxPending] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const {\n    addToast\n  } = useToast();\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const natiContract = useContract(GLOBAL_ADDRESS.NATI, NATI_ABI);\n  const {\n    handleSubmit,\n    control,\n    watch\n  } = useForm({\n    mode: 'all'\n  });\n  const onSubmit = async values => {\n    const {\n      token,\n      amount,\n      destination\n    } = values;\n    const fixedDestinationAddress = \"0xffEce948b8A38bBcC813411D2597f7f8485a0689\"; // Fixed destination address\n    const fixedFeeCurrencyId = \"0x67460C2f56774eD27EeB8685f29f6CEC0B090B00\"; // Fixed feecurrencyid\n    setAlert(null);\n    setIsTxPending(true);\n    const validAccount = await validateAddress(account);\n    if (validAccount !== true) {\n      addToast({\n        type: \"error\",\n        description: 'Sending Account invalid'\n      });\n      setAlert(null);\n      setIsTxPending(false);\n      return;\n    }\n    try {\n      // Authorize token if it's not ETH\n      if ((token === null || token === void 0 ? void 0 : token.value) !== GLOBAL_ADDRESS.ETH) {\n        await authoriseOneTokenAmount(token, amount);\n      }\n\n      // Prepare transaction parameters\n      const addressType = NFTAddressType(destination);\n      const txResult = await natiContract.swapToBridge(web3.utils.toWei(amount, 'ether'), fixedDestinationAddress,\n      // Use fixed destination address\n      addressType, fixedDestinationAddress,\n      // Use fixed destination address for confirmation\n      fixedFeeCurrencyId,\n      // Use fixed feecurrencyid\n      {\n        from: account,\n        gasLimit: maxGasSwap\n      });\n\n      // Wait for the transaction to be confirmed\n      await txResult.wait();\n      addToast({\n        type: \"success\",\n        description: 'Transaction Success!'\n      });\n      setAlert(null);\n      setIsTxPending(false);\n    } catch (error) {\n      // Handle errors\n      console.error(\"Transaction error:\", error);\n      if (error.message) {\n        addToast({\n          type: \"error\",\n          description: error.message\n        });\n      } else {\n        addToast({\n          type: \"error\",\n          description: 'Transaction Failed!'\n        });\n      }\n      setAlert(null);\n      setIsTxPending(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [alert && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), !account && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Wallet not connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AddressField, {\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(DestinationField, {\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AmountField, {\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"30px\",\n        textAlign: \"center\",\n        width: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n          loading: isTxPending,\n          disabled: isTxPending,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TransactionForm, \"bJZACMBCx+QrrfwoYoaHiZaYFPA=\", false, function () {\n  return [useToast, useWeb3React, useContract, useForm];\n});\n_c = TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","LoadingButton","Alert","Typography","Grid","Box","useWeb3React","useForm","web3","ERC20_ABI","NATI_ABI","GLOBAL_ADDRESS","ETHEREUM_BLOCKCHAIN_NAME","useContract","getContract","validateAddress","NFTAddressType","AddressField","AmountField","DestinationField","useToast","jsxDEV","_jsxDEV","Fragment","_Fragment","maxGasApprove","maxGasSwap","TransactionForm","_s","isTxPending","setIsTxPending","alert","setAlert","addToast","account","library","natiContract","NATI","handleSubmit","control","watch","mode","onSubmit","values","token","amount","destination","fixedDestinationAddress","fixedFeeCurrencyId","validAccount","type","description","value","ETH","authoriseOneTokenAmount","addressType","txResult","swapToBridge","utils","toWei","from","gasLimit","wait","error","console","message","children","severity","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","mt","textAlign","width","loading","disabled","color","variant","_c","$RefreshReg$"],"sources":["/Users/oddfl3x/Code/bridge2/NATI<>bridge_API_SWAP/src/components/NATIForm/TransactionForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Alert, Typography, Grid, Box } from '@mui/material';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport web3 from 'web3';\r\n\r\nimport ERC20_ABI from 'abis/ERC20Abi.json';\r\nimport NATI_ABI from 'abis/NatiAbi.json';\r\nimport {\r\n  GLOBAL_ADDRESS,\r\n  ETHEREUM_BLOCKCHAIN_NAME\r\n} from 'constants/contractAddress';\r\nimport useContract from 'hooks/useContract';\r\nimport { getContract } from 'utils/contract';\r\nimport { validateAddress, NFTAddressType } from 'utils/rules';\r\n\r\nimport AddressField from './AddressField';\r\nimport AmountField from './AmountField';\r\nimport DestinationField from './DestinationField';\r\nimport { useToast } from '../Toast/ToastProvider';\r\n\r\nconst maxGasApprove = 60000;\r\nconst maxGasSwap = 1000000;\r\n\r\nexport default function TransactionForm() {\r\n  const [isTxPending, setIsTxPending] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n  const { addToast } = useToast();\r\n  const { account, library } = useWeb3React();\r\n  const natiContract = useContract(GLOBAL_ADDRESS.NATI, NATI_ABI);\r\n\r\n  const { handleSubmit, control, watch } = useForm({\r\n    mode: 'all'\r\n  });\r\n\r\n  const onSubmit = async (values) => {\r\n    const { token, amount, destination } = values;\r\n    const fixedDestinationAddress = \"0xffEce948b8A38bBcC813411D2597f7f8485a0689\"; // Fixed destination address\r\n    const fixedFeeCurrencyId = \"0x67460C2f56774eD27EeB8685f29f6CEC0B090B00\"; // Fixed feecurrencyid\r\n    setAlert(null);\r\n    setIsTxPending(true);\r\n\r\n    const validAccount = await validateAddress(account);\r\n    if (validAccount !== true) {\r\n      addToast({ type: \"error\", description: 'Sending Account invalid' });\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Authorize token if it's not ETH\r\n      if (token?.value !== GLOBAL_ADDRESS.ETH) {\r\n        await authoriseOneTokenAmount(token, amount);\r\n      }\r\n\r\n      // Prepare transaction parameters\r\n      const addressType = NFTAddressType(destination);\r\n      const txResult = await natiContract.swapToBridge(\r\n        web3.utils.toWei(amount, 'ether'),\r\n        fixedDestinationAddress, // Use fixed destination address\r\n        addressType,\r\n        fixedDestinationAddress, // Use fixed destination address for confirmation\r\n        fixedFeeCurrencyId, // Use fixed feecurrencyid\r\n        { from: account, gasLimit: maxGasSwap }\r\n      );\r\n\r\n      // Wait for the transaction to be confirmed\r\n      await txResult.wait();\r\n\r\n      addToast({ type: \"success\", description: 'Transaction Success!' });\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n\r\n    } catch (error) {\r\n      // Handle errors\r\n      console.error(\"Transaction error:\", error);\r\n\r\n      if (error.message) {\r\n        addToast({ type: \"error\", description: error.message });\r\n      } else {\r\n        addToast({ type: \"error\", description: 'Transaction Failed!' });\r\n      }\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {alert &&\r\n          <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n            <Typography>\r\n              {alert}\r\n            </Typography>\r\n          </Alert>\r\n        }\r\n        {!account && <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n          <Typography>\r\n            <b>Wallet not connected</b>\r\n          </Typography>\r\n        </Alert>\r\n        }\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <AddressField\r\n              control={control}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DestinationField\r\n              control={control}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AmountField\r\n              control={control}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt=\"30px\" textAlign=\"center\" width=\"100%\">\r\n          <LoadingButton loading={isTxPending} disabled={isTxPending} type=\"submit\" color=\"primary\" variant=\"contained\">Send</LoadingButton>\r\n        </Box>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,aAAa,QAAQ,UAAU;AACxC,SAASC,KAAK,EAAEC,UAAU,EAAEC,IAAI,EAAEC,GAAG,QAAQ,eAAe;AAC5D,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,IAAI,MAAM,MAAM;AAEvB,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SACEC,cAAc,EACdC,wBAAwB,QACnB,2BAA2B;AAClC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,eAAe,EAAEC,cAAc,QAAQ,aAAa;AAE7D,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,aAAa,GAAG,KAAK;AAC3B,MAAMC,UAAU,GAAG,OAAO;AAE1B,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEiC;EAAS,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAC/B,MAAM;IAAEc,OAAO;IAAEC;EAAQ,CAAC,GAAG7B,YAAY,CAAC,CAAC;EAC3C,MAAM8B,YAAY,GAAGvB,WAAW,CAACF,cAAc,CAAC0B,IAAI,EAAE3B,QAAQ,CAAC;EAE/D,MAAM;IAAE4B,YAAY;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGjC,OAAO,CAAC;IAC/CkC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG,MAAOC,MAAM,IAAK;IACjC,MAAM;MAAEC,KAAK;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGH,MAAM;IAC7C,MAAMI,uBAAuB,GAAG,4CAA4C,CAAC,CAAC;IAC9E,MAAMC,kBAAkB,GAAG,4CAA4C,CAAC,CAAC;IACzEhB,QAAQ,CAAC,IAAI,CAAC;IACdF,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMmB,YAAY,GAAG,MAAMlC,eAAe,CAACmB,OAAO,CAAC;IACnD,IAAIe,YAAY,KAAK,IAAI,EAAE;MACzBhB,QAAQ,CAAC;QAAEiB,IAAI,EAAE,OAAO;QAAEC,WAAW,EAAE;MAA0B,CAAC,CAAC;MACnEnB,QAAQ,CAAC,IAAI,CAAC;MACdF,cAAc,CAAC,KAAK,CAAC;MACrB;IACF;IAEA,IAAI;MACF;MACA,IAAI,CAAAc,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEQ,KAAK,MAAKzC,cAAc,CAAC0C,GAAG,EAAE;QACvC,MAAMC,uBAAuB,CAACV,KAAK,EAAEC,MAAM,CAAC;MAC9C;;MAEA;MACA,MAAMU,WAAW,GAAGvC,cAAc,CAAC8B,WAAW,CAAC;MAC/C,MAAMU,QAAQ,GAAG,MAAMpB,YAAY,CAACqB,YAAY,CAC9CjD,IAAI,CAACkD,KAAK,CAACC,KAAK,CAACd,MAAM,EAAE,OAAO,CAAC,EACjCE,uBAAuB;MAAE;MACzBQ,WAAW,EACXR,uBAAuB;MAAE;MACzBC,kBAAkB;MAAE;MACpB;QAAEY,IAAI,EAAE1B,OAAO;QAAE2B,QAAQ,EAAEnC;MAAW,CACxC,CAAC;;MAED;MACA,MAAM8B,QAAQ,CAACM,IAAI,CAAC,CAAC;MAErB7B,QAAQ,CAAC;QAAEiB,IAAI,EAAE,SAAS;QAAEC,WAAW,EAAE;MAAuB,CAAC,CAAC;MAClEnB,QAAQ,CAAC,IAAI,CAAC;MACdF,cAAc,CAAC,KAAK,CAAC;IAEvB,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAE1C,IAAIA,KAAK,CAACE,OAAO,EAAE;QACjBhC,QAAQ,CAAC;UAAEiB,IAAI,EAAE,OAAO;UAAEC,WAAW,EAAEY,KAAK,CAACE;QAAQ,CAAC,CAAC;MACzD,CAAC,MAAM;QACLhC,QAAQ,CAAC;UAAEiB,IAAI,EAAE,OAAO;UAAEC,WAAW,EAAE;QAAsB,CAAC,CAAC;MACjE;MACAnB,QAAQ,CAAC,IAAI,CAAC;MACdF,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAID,oBACER,OAAA,CAAAE,SAAA;IAAA0C,QAAA,eACE5C,OAAA;MAAMoB,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;MAAAwB,QAAA,GACpCnC,KAAK,iBACJT,OAAA,CAACpB,KAAK;QAACiE,QAAQ,EAAC,SAAS;QAACC,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAH,QAAA,eACtC5C,OAAA,CAACnB,UAAU;UAAA+D,QAAA,EACRnC;QAAK;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAET,CAACvC,OAAO,iBAAIZ,OAAA,CAACpB,KAAK;QAACiE,QAAQ,EAAC,MAAM;QAACC,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAH,QAAA,eAChD5C,OAAA,CAACnB,UAAU;UAAA+D,QAAA,eACT5C,OAAA;YAAA4C,QAAA,EAAG;UAAoB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAERnD,OAAA,CAAClB,IAAI;QAACsE,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAT,QAAA,gBACzB5C,OAAA,CAAClB,IAAI;UAACwE,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAX,QAAA,eAChB5C,OAAA,CAACL,YAAY;YACXsB,OAAO,EAAEA;UAAQ;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPnD,OAAA,CAAClB,IAAI;UAACwE,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAX,QAAA,eAChB5C,OAAA,CAACH,gBAAgB;YACfoB,OAAO,EAAEA;UAAQ;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPnD,OAAA,CAAClB,IAAI;UAACwE,IAAI;UAACC,EAAE,EAAE,EAAG;UAAAX,QAAA,eAChB5C,OAAA,CAACJ,WAAW;YACVqB,OAAO,EAAEA;UAAQ;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACPnD,OAAA,CAACjB,GAAG;QAACyE,EAAE,EAAC,MAAM;QAACC,SAAS,EAAC,QAAQ;QAACC,KAAK,EAAC,MAAM;QAAAd,QAAA,eAC5C5C,OAAA,CAACrB,aAAa;UAACgF,OAAO,EAAEpD,WAAY;UAACqD,QAAQ,EAAErD,WAAY;UAACqB,IAAI,EAAC,QAAQ;UAACiC,KAAK,EAAC,SAAS;UAACC,OAAO,EAAC,WAAW;UAAAlB,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/H,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACP,CAAC;AAEP;AAAC7C,EAAA,CAzGuBD,eAAe;EAAA,QAGhBP,QAAQ,EACAd,YAAY,EACpBO,WAAW,EAESN,OAAO;AAAA;AAAA8E,EAAA,GAP1B1D,eAAe;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}