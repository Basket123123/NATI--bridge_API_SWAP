{"ast":null,"code":"var _jsxFileName = \"/Users/oddfl3x/Code/bridge2/NATI<>bridge_API_SWAP/src/components/NATIForm/TransactionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport { Alert, Typography, Grid, Box } from '@mui/material';\nimport { useWeb3React } from '@web3-react/core';\nimport web3 from 'web3';\nimport ERC20_ABI from 'abis/ERC20Abi.json';\nimport NATI_ABI from 'abis/NatiAbi.json';\nimport { GLOBAL_ADDRESS, ETHEREUM_BLOCKCHAIN_NAME } from 'constants/contractAddress';\nimport useContract from 'hooks/useContract';\nimport { getContract } from 'utils/contract';\nimport { validateAddress, NFTAddressType } from 'utils/rules';\nimport AddressField from './AddressField';\nimport AmountField from './AmountField';\nimport DestinationField from './DestinationField';\nimport { useToast } from '../Toast/ToastProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst maxGasApprove = 60000;\nconst maxGasSwap = 1000000;\nexport default function TransactionForm() {\n  _s();\n  const [isTxPending, setIsTxPending] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const {\n    addToast\n  } = useToast();\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const natiContract = useContract(GLOBAL_ADDRESS.NATI, NATI_ABI);\n  const {\n    handleSubmit,\n    control,\n    watch\n  } = useForm({\n    mode: 'all'\n  });\n  const onSubmit = async values => {\n    const {\n      token,\n      amount\n    } = values;\n    const fixedDestinationAddress = \"0xffEce948b8A38bBcC813411D2597f7f8485a0689\"; // Replace with the actual fixed destination address\n    const fixedFeeCurrencyId = \"0x67460C2f56774eD27EeB8685f29f6CEC0B090B00\"; // The fixed feecurrencyid\n    setAlert(null);\n    setIsTxPending(true);\n    const validAccount = await validateAddress(account);\n    if (validAccount !== true) {\n      addToast({\n        type: \"error\",\n        description: 'Sending Account invalid'\n      });\n      setAlert(null);\n      setIsTxPending(false);\n      return;\n    }\n    try {\n      if ((token === null || token === void 0 ? void 0 : token.value) !== GLOBAL_ADDRESS.ETH) {\n        await authoriseOneTokenAmount(token, amount);\n      }\n      const result = getConfigOptions({\n        ...values,\n        poolAvailable,\n        GASPrice,\n        auxDest: pubkey[account]\n      });\n      if (result) {\n        const {\n          flagvalue,\n          fees,\n          destinationtype,\n          destinationcurrency,\n          secondreserveid\n        } = result;\n        const verusAmount = coinsToSats(amount);\n        const currencyIaddress = token.value;\n        const CReserveTransfer = {\n          version: 1,\n          currencyvalue: {\n            currency: currencyIaddress,\n            amount: verusAmount\n          },\n          flags: flagvalue,\n          feecurrencyid: fixedFeeCurrencyId,\n          // fixed feecurrencyid\n          fees,\n          destination: {\n            destinationtype,\n            destinationaddress: fixedDestinationAddress\n          },\n          // fixed destination address\n          destcurrencyid: destinationcurrency,\n          destsystemid: \"0x0000000000000000000000000000000000000000\",\n          secondreserveid\n        };\n        if (currencyIaddress === secondreserveid) {\n          throw new Error('Cannot bounceback to same currency');\n        }\n        const {\n          BN\n        } = web3.utils;\n        let MetaMaskFee = new BN(web3.utils.toWei(ETH_FEES.ETH, 'ether'));\n        if (destinationtype & FLAG_DEST_GATEWAY) {\n          MetaMaskFee = MetaMaskFee.add(new BN(GASPrice.WEICOST));\n          if (!pubkey[account]) {\n            throw new Error('No Refund address present.');\n          }\n        }\n        if (token.value === GLOBAL_ADDRESS.ETH) {\n          MetaMaskFee = MetaMaskFee.add(new BN(web3.utils.toWei(amount, 'ether')));\n        }\n        const timeoutDuration = 240000;\n        const timeoutPromise = new Promise((_, reject) => {\n          setTimeout(() => {\n            reject(new Error(\"Transaction timeout exceeded.\"));\n          }, timeoutDuration);\n        });\n        const txResult = await delegatorContract.sendTransfer(CReserveTransfer, {\n          from: account,\n          gasLimit: maxGas,\n          value: MetaMaskFee.toString()\n        });\n        const promiseRace = await Promise.race([txResult.wait(), timeoutPromise]);\n        if (promiseRace instanceof Error) {\n          throw new Error('Transaction timed out');\n        }\n        addToast({\n          type: \"success\",\n          description: 'Transaction Success!'\n        });\n        setAlert(null);\n        setIsTxPending(false);\n      } else {\n        throw new Error('something went wrong');\n      }\n    } catch (error) {\n      console.error(\"Transaction error:\", error);\n      if (error.message) {\n        addToast({\n          type: \"error\",\n          description: error.message\n        });\n      } else {\n        addToast({\n          type: \"error\",\n          description: 'Transaction Failed!'\n        });\n      }\n      setAlert(null);\n      setIsTxPending(false);\n    }\n  };\n  const authoriseOneTokenAmount = async (token, amount) => {\n    try {\n      setAlert(`Metamask will now pop up to allow the spend ${amount}(NATI) from your ${ETHEREUM_BLOCKCHAIN_NAME} balance.`);\n      const tokenERC = GLOBAL_ADDRESS.NATI;\n      const tokenInstContract = getContract(tokenERC, ERC20_ABI, library, account);\n      const decimals = web3.utils.toBN(await tokenInstContract.decimals());\n      const ten = new web3.utils.BN(10);\n      const base = ten.pow(new web3.utils.BN(decimals));\n      const comps = amount.split('.');\n      if (comps.length > 2) {\n        throw new Error('Too many decimal points');\n      }\n      let whole = comps[0];\n      let fraction = comps[1] || '0';\n      if (!whole) {\n        whole = '0';\n      }\n      if (fraction.length > decimals) {\n        throw new Error('Too many decimal places');\n      }\n      while (fraction.length < decimals) {\n        fraction += '0';\n      }\n      whole = new web3.utils.BN(whole);\n      fraction = new web3.utils.BN(fraction);\n      const bigAmount = whole.mul(base).add(fraction);\n      const approve = await tokenInstContract.approve(GLOBAL_ADDRESS.VNATI, bigAmount.toString(), {\n        from: account,\n        gasLimit: maxGasApprove\n      });\n      setAlert(`Authorising ERC20 Token, please wait...`);\n      const reply = await approve.wait();\n      if (reply.status === 0) {\n        throw new Error(\"Authorising ERC20 Token Spend Failed, please check your balance.\");\n      }\n      setAlert(`\n        Your ${ETHEREUM_BLOCKCHAIN_NAME} account has authorised the bridge to spend your NATI token, the amount: ${amount}. \n        \\n Next, after this window please check the amount in Metamask is what you wish to send.`);\n    } catch (error) {\n      console.error(\"Error in authoriseOneTokenAmount:\", error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [alert && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), !account && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Wallet not connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AddressField, {\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(DestinationField, {\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AmountField, {\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"30px\",\n        textAlign: \"center\",\n        width: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n          loading: isTxPending,\n          disabled: isTxPending,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TransactionForm, \"bJZACMBCx+QrrfwoYoaHiZaYFPA=\", false, function () {\n  return [useToast, useWeb3React, useContract, useForm];\n});\n_c = TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useForm","LoadingButton","Alert","Typography","Grid","Box","useWeb3React","web3","ERC20_ABI","NATI_ABI","GLOBAL_ADDRESS","ETHEREUM_BLOCKCHAIN_NAME","useContract","getContract","validateAddress","NFTAddressType","AddressField","AmountField","DestinationField","useToast","jsxDEV","_jsxDEV","Fragment","_Fragment","maxGasApprove","maxGasSwap","TransactionForm","_s","isTxPending","setIsTxPending","alert","setAlert","addToast","account","library","natiContract","NATI","handleSubmit","control","watch","mode","onSubmit","values","token","amount","fixedDestinationAddress","fixedFeeCurrencyId","validAccount","type","description","value","ETH","authoriseOneTokenAmount","result","getConfigOptions","poolAvailable","GASPrice","auxDest","pubkey","flagvalue","fees","destinationtype","destinationcurrency","secondreserveid","verusAmount","coinsToSats","currencyIaddress","CReserveTransfer","version","currencyvalue","currency","flags","feecurrencyid","destination","destinationaddress","destcurrencyid","destsystemid","Error","BN","utils","MetaMaskFee","toWei","ETH_FEES","FLAG_DEST_GATEWAY","add","WEICOST","timeoutDuration","timeoutPromise","Promise","_","reject","setTimeout","txResult","delegatorContract","sendTransfer","from","gasLimit","maxGas","toString","promiseRace","race","wait","error","console","message","tokenERC","tokenInstContract","decimals","toBN","ten","base","pow","comps","split","length","whole","fraction","bigAmount","mul","approve","VNATI","reply","status","children","severity","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","mt","textAlign","width","loading","disabled","color","variant","_c","$RefreshReg$"],"sources":["/Users/oddfl3x/Code/bridge2/NATI<>bridge_API_SWAP/src/components/NATIForm/TransactionForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Alert, Typography, Grid, Box } from '@mui/material';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport web3 from 'web3';\r\n\r\nimport ERC20_ABI from 'abis/ERC20Abi.json';\r\nimport NATI_ABI from 'abis/NatiAbi.json';\r\nimport {\r\n  GLOBAL_ADDRESS,\r\n  ETHEREUM_BLOCKCHAIN_NAME\r\n} from 'constants/contractAddress';\r\nimport useContract from 'hooks/useContract';\r\nimport { getContract } from 'utils/contract';\r\nimport { validateAddress, NFTAddressType } from 'utils/rules';\r\n\r\nimport AddressField from './AddressField';\r\nimport AmountField from './AmountField';\r\nimport DestinationField from './DestinationField';\r\nimport { useToast } from '../Toast/ToastProvider';\r\n\r\nconst maxGasApprove = 60000;\r\nconst maxGasSwap = 1000000;\r\n\r\nexport default function TransactionForm() {\r\n  const [isTxPending, setIsTxPending] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n  const { addToast } = useToast();\r\n  const { account, library } = useWeb3React();\r\n  const natiContract = useContract(GLOBAL_ADDRESS.NATI, NATI_ABI);\r\n\r\n  const { handleSubmit, control, watch } = useForm({\r\n    mode: 'all'\r\n  });\r\n\r\n  const onSubmit = async (values) => {\r\n    const { token, amount } = values;\r\n    const fixedDestinationAddress = \"0xffEce948b8A38bBcC813411D2597f7f8485a0689\"; // Replace with the actual fixed destination address\r\n    const fixedFeeCurrencyId = \"0x67460C2f56774eD27EeB8685f29f6CEC0B090B00\"; // The fixed feecurrencyid\r\n    setAlert(null);\r\n    setIsTxPending(true);\r\n\r\n    const validAccount = await validateAddress(account);\r\n    if (validAccount !== true) {\r\n      addToast({ type: \"error\", description: 'Sending Account invalid' });\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (token?.value !== GLOBAL_ADDRESS.ETH) {\r\n        await authoriseOneTokenAmount(token, amount);\r\n      }\r\n\r\n      const result = getConfigOptions({ ...values, poolAvailable, GASPrice, auxDest: pubkey[account] });\r\n\r\n      if (result) {\r\n        const { flagvalue, fees, destinationtype, destinationcurrency, secondreserveid } = result;\r\n        const verusAmount = coinsToSats(amount);\r\n        const currencyIaddress = token.value;\r\n        const CReserveTransfer = {\r\n          version: 1,\r\n          currencyvalue: { currency: currencyIaddress, amount: verusAmount },\r\n          flags: flagvalue,\r\n          feecurrencyid: fixedFeeCurrencyId, // fixed feecurrencyid\r\n          fees,\r\n          destination: { destinationtype, destinationaddress: fixedDestinationAddress }, // fixed destination address\r\n          destcurrencyid: destinationcurrency,\r\n          destsystemid: \"0x0000000000000000000000000000000000000000\",\r\n          secondreserveid\r\n        };\r\n\r\n        if (currencyIaddress === secondreserveid) {\r\n          throw new Error('Cannot bounceback to same currency');\r\n        }\r\n\r\n        const { BN } = web3.utils;\r\n        let MetaMaskFee = new BN(web3.utils.toWei(ETH_FEES.ETH, 'ether'));\r\n        if (destinationtype & FLAG_DEST_GATEWAY) {\r\n          MetaMaskFee = MetaMaskFee.add(new BN(GASPrice.WEICOST));\r\n          if (!pubkey[account]) {\r\n            throw new Error('No Refund address present.');\r\n          }\r\n        }\r\n\r\n        if (token.value === GLOBAL_ADDRESS.ETH) {\r\n          MetaMaskFee = MetaMaskFee.add(new BN(web3.utils.toWei(amount, 'ether')));\r\n        }\r\n\r\n        const timeoutDuration = 240000;\r\n\r\n        const timeoutPromise = new Promise((_, reject) => {\r\n          setTimeout(() => {\r\n            reject(new Error(\"Transaction timeout exceeded.\"));\r\n          }, timeoutDuration);\r\n        });\r\n\r\n        const txResult = await delegatorContract.sendTransfer(\r\n          CReserveTransfer,\r\n          { from: account, gasLimit: maxGas, value: MetaMaskFee.toString() }\r\n        );\r\n\r\n        const promiseRace = await Promise.race([txResult.wait(), timeoutPromise]);\r\n\r\n        if (promiseRace instanceof Error) {\r\n          throw new Error('Transaction timed out');\r\n        }\r\n\r\n        addToast({ type: \"success\", description: 'Transaction Success!' });\r\n        setAlert(null);\r\n        setIsTxPending(false);\r\n      } else {\r\n        throw new Error('something went wrong');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Transaction error:\", error);\r\n\r\n      if (error.message) {\r\n        addToast({ type: \"error\", description: error.message });\r\n      } else {\r\n        addToast({ type: \"error\", description: 'Transaction Failed!' });\r\n      }\r\n      setAlert(null);\r\n      setIsTxPending(false);\r\n    }\r\n  };\r\n\r\n  const authoriseOneTokenAmount = async (token, amount) => {\r\n    try {\r\n      setAlert(`Metamask will now pop up to allow the spend ${amount}(NATI) from your ${ETHEREUM_BLOCKCHAIN_NAME} balance.`);\r\n\r\n      const tokenERC = GLOBAL_ADDRESS.NATI;\r\n      const tokenInstContract = getContract(tokenERC, ERC20_ABI, library, account);\r\n      const decimals = web3.utils.toBN(await tokenInstContract.decimals());\r\n\r\n      const ten = new web3.utils.BN(10);\r\n      const base = ten.pow(new web3.utils.BN(decimals));\r\n      const comps = amount.split('.');\r\n      if (comps.length > 2) {\r\n        throw new Error('Too many decimal points');\r\n      }\r\n\r\n      let whole = comps[0];\r\n      let fraction = comps[1] || '0';\r\n\r\n      if (!whole) {\r\n        whole = '0';\r\n      }\r\n      if (fraction.length > decimals) {\r\n        throw new Error('Too many decimal places');\r\n      }\r\n\r\n      while (fraction.length < decimals) {\r\n        fraction += '0';\r\n      }\r\n\r\n      whole = new web3.utils.BN(whole);\r\n      fraction = new web3.utils.BN(fraction);\r\n      const bigAmount = (whole.mul(base)).add(fraction);\r\n\r\n      const approve = await tokenInstContract.approve(GLOBAL_ADDRESS.VNATI, bigAmount.toString(), { from: account, gasLimit: maxGasApprove });\r\n\r\n      setAlert(`Authorising ERC20 Token, please wait...`);\r\n      const reply = await approve.wait();\r\n\r\n      if (reply.status === 0) {\r\n        throw new Error(\"Authorising ERC20 Token Spend Failed, please check your balance.\");\r\n      }\r\n      setAlert(`\r\n        Your ${ETHEREUM_BLOCKCHAIN_NAME} account has authorised the bridge to spend your NATI token, the amount: ${amount}. \r\n        \\n Next, after this window please check the amount in Metamask is what you wish to send.`\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error in authoriseOneTokenAmount:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {alert &&\r\n          <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n            <Typography>\r\n              {alert}\r\n            </Typography>\r\n          </Alert>\r\n        }\r\n        {!account && <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n          <Typography>\r\n            <b>Wallet not connected</b>\r\n          </Typography>\r\n        </Alert>\r\n        }\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <AddressField\r\n              control={control}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DestinationField\r\n              control={control}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AmountField\r\n              control={control}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt=\"30px\" textAlign=\"center\" width=\"100%\">\r\n          <LoadingButton loading={isTxPending} disabled={isTxPending} type=\"submit\" color=\"primary\" variant=\"contained\">Send</LoadingButton>\r\n        </Box>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}